<!DOCTYPE html ><html lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><meta http-equiv="refresh" content="1;URL=http://file.diolee.top"/><link type="text/css" rel="styleSheet"  href="css/b.css" /><title>GY_file:上传结果</title></head><?phpsession_start();include('db.php');	if (isset($_FILES['imgfile']) && is_uploaded_file($_FILES['imgfile']['tmp_name']))	{		$imgFile = $_FILES['imgfile'];		$upErr = $imgFile['error'];		if ($upErr == 0)		{			$imgType = $imgFile['type']; //文件类型。			/* 判断文件类型，这个例子里仅支持jpg和gif类型的图片文件。*/			if ($imgType == 'image/jpeg' || $imgType == 'image/gif')			{				$netname = $_POST['imgname'];//得到输入名				$netag = $_POST['imgtag'];//tag名				$ssname = $_SESSION['username'];echo $ssname;				$sql = "select * from sserp_tags where tags = '$netag' and binary user = '$ssname';";				$res = $conn->query($sql);				if ($row = $res->fetch()){					echo "好耶<br/>";				} else {					$sql = "insert into sserp_tags(tags,user) values('$netag','$ssname');";					$res = $conn->query($sql);					echo "已将新TAG入库<br/>";				}				$date = date('Ymdhis');//得到系统时间名				$imgFileName = $imgFile['name'];				/*将xxx.JPG拆分成一个xxx和一个.XXX*/				$name = explode('.',$imgFileName);				$newPath = $netname.'-'.$date.'.'.$name[1];//新文件名=输入名+系统时间+.XXX				/*rename($imgFileName,$newPath);*/				$imgSize = $imgFile['size'];				$imgTmpFile = $imgFile['tmp_name'];								/* 将文件从临时文件夹移到上传文件夹中。*/				$TmpPath = '../upfile/'.$_SESSION['username'].'/'.$newPath;				//echo $TmpPath;				move_uploaded_file($imgTmpFile, $TmpPath);				/*显示上传后的文件的信息。*/				$strPrompt = sprintf("文件: %s上传成功<br>"				. "文件大小: %s字节<br>"				. "<img src='../upfile/%s'>"				, $newPath, $imgSize, $TmpPath				);				echo $strPrompt;				/* 如果图片＞500kb就进行压缩 */				if ($imgSize > 512000){					class imgcompress{						   private $src;						   private $image;						   private $imageinfo;						   private $percent = 0.5;						   /**							* 图片压缩							* @param $src 源图							* @param float $percent  压缩比例							*/						   public function __construct($src, $percent=1)						   {								  $this->src = $src;								  $this->percent = $percent;						   }					 					 						   /** 高清压缩图片							* @param string $saveName  提供图片名（可不带扩展名，用源图扩展名）用于保存。或不提供文件名直接显示							*/						   public function compressImg($saveName='')						   {								  $this->_openImage();								  if(!empty($saveName)) $this->_saveImage($saveName);  //保存								  else $this->_showImage();						   }					 						   /**							* 内部：打开图片							*/						   private function _openImage()						   {								  list($width, $height, $type, $attr) = getimagesize($this->src);								  $this->imageinfo = array(										 'width'=>$width,										 'height'=>$height,										 'type'=>image_type_to_extension($type,false),										 'attr'=>$attr								  );								  $fun = "imagecreatefrom".$this->imageinfo['type'];								  $this->image = $fun($this->src);								  $this->_thumpImage();						   }						   /**							* 内部：操作图片							*/						   private function _thumpImage()						   {								  $new_width = $this->imageinfo['width'] * $this->percent;								  $new_height = $this->imageinfo['height'] * $this->percent;								  $image_thump = imagecreatetruecolor($new_width,$new_height);								  //将原图复制带图片载体上面，并且按照一定比例压缩,极大的保持了清晰度								  imagecopyresampled($image_thump,$this->image,0,0,0,0,$new_width,$new_height,$this->imageinfo['width'],$this->imageinfo['height']);								  imagedestroy($this->image);								  $this->image = $image_thump;						   }						   /**							* 输出图片:保存图片则用saveImage()							*/						   private function _showImage()						   {								  header('Content-Type: image/'.$this->imageinfo['type']);								  $funcs = "image".$this->imageinfo['type'];								  $funcs($this->image);						   }						   /**							* 保存图片到硬盘：							* @param  string $dstImgName  1、可指定字符串不带后缀的名称，使用源图扩展名 。2、直接指定目标图片名带扩展名。							*/						   private function _saveImage($dstImgName)						   {								  if(empty($dstImgName)) return false;								  $allowImgs = ['.jpg', '.jpeg', '.png', '.bmp', '.wbmp','.gif'];   //如果目标图片名有后缀就用目标图片扩展名 后缀，如果没有，则用源图的扩展名								  $dstExt =  strrchr($dstImgName ,".");								  $sourseExt = strrchr($this->src ,".");								  if(!empty($dstExt)) $dstExt =strtolower($dstExt);								  if(!empty($sourseExt)) $sourseExt =strtolower($sourseExt);					 								  //有指定目标名扩展名								  if(!empty($dstExt) && in_array($dstExt,$allowImgs)){										 $dstName = $dstImgName;								  }elseif(!empty($sourseExt) && in_array($sourseExt,$allowImgs)){										 $dstName = $dstImgName.$sourseExt;								  }else{										 $dstName = $dstImgName.$this->imageinfo['type'];								  }								  $funcs = "image".$this->imageinfo['type'];								  $funcs($this->image,"../".$dstName);						   }					 						   /**							* 销毁图片							*/						   public function __destruct(){								  imagedestroy($this->image);						   }					 					}					 					$source = $TmpPath;					$dst_img = $newPath; //可加存放路径					$percent = 1;  #原图压缩，不缩放					$image = (new imgcompress($source,$percent))->compressImg('upfile/'.$ssname.'/'.$dst_img);				}								$sql = "insert into sserp_path(img_path,img_name,img_tag,user) values('$TmpPath','$newPath','$netag','$ssname');";				$res = $conn->query($sql);				$conn = null;			}			else			{				echo "请选择jpg或gif文件，不支持其它类型的文件。";			}		}		else		{			echo "文件上传失败。<br>";			switch ($upErr)			{				case 1:				echo "超过了php.ini中设置的上传文件大小。";				break;				case 2:				echo "超过了MAX_FILE_SIZE选项指定的文件大小。";				break;				case 3:				echo "文件只有部分被上传。";				break;				case 4:				echo "文件未被上传。";				break;				case 5:				echo "上传文件大小为0";				break;			}		}	}?></html>